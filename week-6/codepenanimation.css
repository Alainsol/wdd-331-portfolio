
  
  html,
  body {
    height: 100%;
  }

  * {
    box-sizing: border-box;
  }
  
  body {
    display: flex;
    justify-content: space-around;
    align-items: center;
  }
  .container {
    height: 25vmin;
    width: 25vmin;
    background-color: teal;
  }
  
  .container-one {
    padding: 1vmin;
  }
  
  .orbiting-circle {
    height: 25%;
    width: 25%;
    background-color: rgb(153, 10, 10);
    border-radius: 50%;
    animation: orbit 3s linear infinite;
    opacity: 0.5;
  }
  
  @keyframes orbit {
    0% {
      transform: translate(0, 0);
    }
    5% {
      transform: translate(0, 0);
    } /* don't change for 5% of the time...pause */
    25% {
      transform: translate(300%, 0%);
    } /* start moving again */
    30% {
      transform: translate(300%, 0%);
    } /* pause */
    50% {
      transform: translate(300%, 300%);
    } /* move */
    55% {
      transform: translate(300%, 300%);
    }
    75% {
      transform: translate(0%, 300%);
    }
    80% {
      transform: translate(0%, 300%);
    }
    100% {
      transform: translate(0%, 0%);
    }
  }
  
  .container-two {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  .morphing-circle {
    height: 25%;
    width: 25%;
    opacity: 0.5;
    background-color: darkred;
    border-radius: 50%;
    animation: morphing-circle-square 3s linear infinite;
    transition: border-radius 0.5s ease, background-color 0.5s ease,
      transform 0.5s ease 0.5s;
  }
  
  @keyframes morphing-circle-square {
    0% {
      border-radius: 50%;
    }
    25% {
      /*(if you don't add both red and circle here it will start changing one or the other before you are ready) */
      border-radius: 50%;
      background-color: darkred;
    }
    50% {
      /* now change to white square...but don't start rotating yet! */
      border-radius: 0%;
      background-color: white;
      transform: rotate(0deg);
    }
    75% {
      /* stay a white square, but rotate 90deg */
      border-radius: 0%;
      background-color: white;
      transform: rotate(90deg);
    }
    100% {
      /* stay rotated at 90, but change back to a circle */
      border-radius: 50%;
      background-color: darkred;
      transform: rotate(90deg);
    }
  }
  
  .container-three {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  /*https://stackdiary.com/css-animations/*/
  .divide-circle-left {
    opacity: 0.5;
    height: 25%;
    width: 12%;
    background-color: darkred;
    border-radius: 50px 0 0 50px / 50px 0 0 50px;
    animation: divide  linear infinite;
    animation-duration: 3s;
  }
  
  .divide-circle-right {
    opacity: 0.5;
    height: 25%;
    width: 12%;
    background-color: darkred;
    border-radius: 0 50px 50px 0 / 0 50px 50px 0;
    animation-duration: 3s;
  }
  
  @keyframes divide {
    0% {
      margin-right: 0;
    }
  
    50% {
      margin-right: 15%;
    }
  
    75% {
      margin-right: 0;
    }
  
    100% {
      margin-right: 0;
    }
  }
  /*On #4, I just noticed that my animation is a smidge short...it looks like it's a pattern of 2 beats then one beat. It should just be a repeating 2 beat pattern.*/
  .container-four {
    display: flex;
    justify-content: center;
    align-items: center;
  }
   /*The scale() function is specified with either one or two values, which represent the amount of scaling to be applied in each direction.
  scale(sx)
scale(sx, sy)

https://learnwithparam.com/blog/hearbeat-animation-using-css/#:~:text=%23Logrocket%20Blog-,Heart%20beat%20animation%20using%20CSS,-July%2021%2C%202019

2beats means 2 second*/
  .heartbeat-circle {
    opacity: 0.5;
    height: 25%;
    width: 25%;
    background-color: darkred;
    border-radius: 50%;
    animation: heartbeat infinite;
    animation-duration: 2s;
  }
 
  @keyframes heartbeat {
    
    0% {
      transform: scale(0, 0);
    }
    25% {
      transform: scale(1, 1);
    }
    50% {
      transform: scale(1.3, 1.3);
    }
    75% {
      transform: scale(1, 1);
    }
    100% {
      transform: scale(1.3, 1.3);
    }
   
    
  }
  
  
  
